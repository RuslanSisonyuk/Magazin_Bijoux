@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
    .Select(c => new SelectListItem { Value = c.Name, Text = Localizer.GetString(c.Name) })
    .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";
}
<style>
    .c-form{
        padding: 0px;
    }
    .c-select{
        border: 1px solid transparent;
        border-color: transparent;
        background-color: transparent;
        font-size: 18px;
        color: white;
    }
    .c-select:focus {
        color: black;
    }
</style>
<div title="@Localizer[" Request culture provider:"] @requestCulture?.Provider?.GetType().Name">
    <form id="selectLanguage"
            asp-controller="Culture"
            asp-action="SetCulture"
            asp-route-returnUrl="@returnUrl"
            method="post"
            class="form-horizontal nav-link text-dark c-form"
            role="form"
            >
        <select name="culture"
                onchange="this.form.submit();"
                asp-for="@requestCulture.RequestCulture.UICulture.Name"
                asp-items="cultureItems"
                class="c-select"
                >
        </select>
    </form>
</div>